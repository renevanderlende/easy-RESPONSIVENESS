@CHARSET "UTF-8";

/************************************************/
/* easy RESPONSIVE|HARMONICA|NESS CUST.ATTRIBUTE */
/************************************************/
/*
    [data-harmonica]: use to define a flexbox (FBL) parent container holding the harmonica "folding" elements.

    data-harmonica > * - harmonica "folding" elements (flexed child elements)

    data-harmonica: H - Horizontal  a row of several folds next to eachother
                    V - Vertical    a column of several folds below to eachother

    Explanation:

    - grow hovered flexed child element to given flex-basis
    - shrink the other flexed child elements to: (width [or height] * flex-basis) / (#elements - 1)
    - optionally adjust them to specified flexed element width/height constraints (or fill parent, the default)

    A flex-basis of 100% hides sibling child elements when they have no minimum sizes => 80% or 90% works best

    Functionality for either classes or custom data attributes is equal,
    but the latter are easier to manipulate/toggle in Javascript.
*/
/* [MANDATORY] */
[data-harmonica]                { display: flex; flex-wrap: nowrap; height: 100%; width: 100% } /* fill parent */

[data-harmonica="H"]            { flex-direction: row }
[data-harmonica="V"]            { flex-direction: column }
[data-harmonica="HR"]           { flex-direction: row-reverse }
[data-harmonica="VR"]           { flex-direction: column-reverse }

[data-harmonica]>*              { flex: 1 1 0; overflow: hidden; transition: all 150ms ease-in-out }
[data-harmonica]>*:hover        { flex: 1 1 80% }

/* [OPTIONAL] */
[data-harmonica*="H"]>*         { max-height: 100% }
[data-harmonica*="V"]>*         { max-width : 100% }

[data-harmonica] input[name^="hrm"] { display:none; position:absolute; overflow:hidden; clip:rect(0 0 0 0);
                                      z-index:-999999; top:-999999px; margin:-1px; padding:0; border:0;
                                      height:1px; width:1px; min-height:0; min-width:0; max-height:0; max-width:0 }


